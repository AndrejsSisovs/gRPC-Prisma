// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.0
//   protoc               v3.12.4
// source: proto/registration.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufUserPackage = "registration";

export interface AuthInput {
  username: string;
  password: string;
}

export interface AuthResult {
  accessToken: string;
  userId: number;
  username: string;
}

export const REGISTRATION_PACKAGE_NAME = "registration";

export interface UserServiceClient {
  authenticate(request: AuthInput): Observable<AuthResult>;
}

export interface UsertServiceController {
  authenticate(request: AuthInput): Promise<AuthResult> | Observable<AuthResult> | AuthResult;
}

export function UserServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["authenticate"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USER_SERVICE_NAME = "ProductService";
